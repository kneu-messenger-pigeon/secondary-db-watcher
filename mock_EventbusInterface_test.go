// Code generated by mockery v2.14.1. DO NOT EDIT.

package main

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// MockEventbusInterface is an autogenerated mock type for the EventbusInterface type
type MockEventbusInterface struct {
	mock.Mock
}

// sendCurrentYearEvent provides a mock function with given fields: year
func (_m *MockEventbusInterface) sendCurrentYearEvent(year int) error {
	ret := _m.Called(year)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(year)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// sendSecondaryDbLoadedEvent provides a mock function with given fields: currentDatabaseStateDatetime, previousDatabaseStateDatetime
func (_m *MockEventbusInterface) sendSecondaryDbLoadedEvent(currentDatabaseStateDatetime time.Time, previousDatabaseStateDatetime time.Time) error {
	ret := _m.Called(currentDatabaseStateDatetime, previousDatabaseStateDatetime)

	var r0 error
	if rf, ok := ret.Get(0).(func(time.Time, time.Time) error); ok {
		r0 = rf(currentDatabaseStateDatetime, previousDatabaseStateDatetime)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockEventbusInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockEventbusInterface creates a new instance of MockEventbusInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockEventbusInterface(t mockConstructorTestingTNewMockEventbusInterface) *MockEventbusInterface {
	mock := &MockEventbusInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
